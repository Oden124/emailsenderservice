# emailsenderservice

Солюшн сделал по классике в виде трех уровневой архитектуры:
1) Уровень призентации. Реализовано в отдельном проекте, чтобы можно было менять на любой другой (консоль, WEB UI например)
2) Уровень Домена. Здесь вся бизнес логика, сущности, интерфейсы.
3) Уровень данных. Реализовал в отдельном проекте. В моем случае я имитирую хранилище, в реальности можно заменить на БД или WEB API
 
 
Т.к я не могу выполнить реальную рассылку, реализовал в виде имитации записб в текстовый файл.

Не успел добавить проекты тестов. Также между уровнями нужно было бы реализовать DTO классы, пока не успел.

Реализацию отказоустойчивости не сделал пока, раньше не этого не делал, нужно мне разбираться. Слышал это можно сделать с помощью очередей, с очердями не работал.
На крайней случай была идея реализовать с помощь MS SQL и транзакций, но потом раздумал, т.к использовать конкретное хранилище для этого не хорошая идея 